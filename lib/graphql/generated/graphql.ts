/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** An ISO 8601-encoded date */
  ISO8601Date: { input: any; output: any; }
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: { input: any; output: any; }
  /** A valid URL, transported as a string */
  Url: { input: any; output: any; }
};

/** Autogenerated input type of AddCommentLikeMutation */
export type AddCommentLikeMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  commentId: Scalars['ID']['input'];
};

/** Autogenerated return type of AddCommentLikeMutation. */
export type AddCommentLikeMutationPayload = {
  __typename?: 'AddCommentLikeMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  comment?: Maybe<Comment>;
  errors: Array<Scalars['String']['output']>;
};

/** Autogenerated input type of AddCommentMutation */
export type AddCommentMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  contents: Scalars['String']['input'];
  videoId: Scalars['ID']['input'];
};

/** Autogenerated return type of AddCommentMutation. */
export type AddCommentMutationPayload = {
  __typename?: 'AddCommentMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  comment?: Maybe<Comment>;
  errors: Array<Scalars['String']['output']>;
};

/** Autogenerated input type of AddLikeMutation */
export type AddLikeMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  videoId: Scalars['ID']['input'];
};

/** Autogenerated return type of AddLikeMutation. */
export type AddLikeMutationPayload = {
  __typename?: 'AddLikeMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  like?: Maybe<Like>;
};

/** Autogenerated input type of AddPlaylistsVideoMutation */
export type AddPlaylistsVideoMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  playlistId: Scalars['ID']['input'];
  videoId: Scalars['ID']['input'];
};

/** Autogenerated return type of AddPlaylistsVideoMutation. */
export type AddPlaylistsVideoMutationPayload = {
  __typename?: 'AddPlaylistsVideoMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  playlistsVideo: PlaylistsVideo;
};

/** Autogenerated input type of AddReplyLikeMutation */
export type AddReplyLikeMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  replyId: Scalars['ID']['input'];
};

/** Autogenerated return type of AddReplyLikeMutation. */
export type AddReplyLikeMutationPayload = {
  __typename?: 'AddReplyLikeMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  reply?: Maybe<Reply>;
};

/** Autogenerated input type of AddReplyMutation */
export type AddReplyMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  commentId: Scalars['ID']['input'];
  contents: Scalars['String']['input'];
  replyId?: InputMaybe<Scalars['ID']['input']>;
  videoId: Scalars['ID']['input'];
};

/** Autogenerated return type of AddReplyMutation. */
export type AddReplyMutationPayload = {
  __typename?: 'AddReplyMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  reply?: Maybe<Reply>;
};

/** Autogenerated input type of AddSamansaTokenTicketMutation */
export type AddSamansaTokenTicketMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of AddSamansaTokenTicketMutation. */
export type AddSamansaTokenTicketMutationPayload = {
  __typename?: 'AddSamansaTokenTicketMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  samansaTokenTicket: Scalars['String']['output'];
};

export type AnyVideo = OriginalVideo | TrailerVideo;

/** The connection type for AnyVideo. */
export type AnyVideoConnection = {
  __typename?: 'AnyVideoConnection';
  /** A list of edges. */
  edges?: Maybe<Array<AnyVideoEdge>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<AnyVideo>>;
  /** Information to aid in pagination. */
  pageInfo?: Maybe<PageInfo>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type AnyVideoEdge = {
  __typename?: 'AnyVideoEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<AnyVideo>;
};

/** Autogenerated input type of AuthorizeSamansaTokenTicketMutation */
export type AuthorizeSamansaTokenTicketMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  samansaTokenTicket: Scalars['String']['input'];
};

/** Autogenerated return type of AuthorizeSamansaTokenTicketMutation. */
export type AuthorizeSamansaTokenTicketMutationPayload = {
  __typename?: 'AuthorizeSamansaTokenTicketMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  samansaTokenTicket: Scalars['String']['output'];
};

export type Category = {
  __typename?: 'Category';
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  rankable: Scalars['Boolean']['output'];
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  videos?: Maybe<Array<OriginalVideo>>;
};

export type Comment = {
  __typename?: 'Comment';
  contents?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  currentUserHasLike?: Maybe<Scalars['Boolean']['output']>;
  discardedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  isMine?: Maybe<Scalars['Boolean']['output']>;
  likeNum?: Maybe<Scalars['Int']['output']>;
  replies?: Maybe<ReplyConnection>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  user?: Maybe<User>;
  userId: Scalars['Int']['output'];
  videoId: Scalars['Int']['output'];
};


export type CommentRepliesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

/** The connection type for Comment. */
export type CommentConnection = {
  __typename?: 'CommentConnection';
  /** A list of edges. */
  edges?: Maybe<Array<CommentEdge>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Comment>>;
  /** Information to aid in pagination. */
  pageInfo?: Maybe<PageInfo>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type CommentEdge = {
  __typename?: 'CommentEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Comment>;
};

/** The connection type for Reply. */
export type CommentRepliesConnection = {
  __typename?: 'CommentRepliesConnection';
  /** A list of edges. */
  edges?: Maybe<Array<CommentRepliesEdge>>;
  id: Scalars['ID']['output'];
  /** A list of nodes. */
  nodes?: Maybe<Array<Reply>>;
  /** Information to aid in pagination. */
  pageInfo?: Maybe<PageInfo>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type CommentRepliesEdge = {
  __typename?: 'CommentRepliesEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Reply>;
};

export enum CommentSortEnum {
  AscCreatedAt = 'ascCreatedAt',
  DescCreatedAt = 'descCreatedAt',
  DescLike = 'descLike'
}

export type Cookies = {
  __typename?: 'Cookies';
  cloudfrontKeyPairId: Scalars['String']['output'];
  cloudfrontPolicy: Scalars['String']['output'];
  cloudfrontSignature: Scalars['String']['output'];
  headerValue: Scalars['String']['output'];
};

/** Autogenerated input type of CreateCommentReportMutation */
export type CreateCommentReportMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  commentId: Scalars['ID']['input'];
  /** 報告理由: 1:いじめ・嫌がらせ, 2:児童虐待, 3:スパム, 4:ポルノ・ヌード, 5:ヘイトスピーチ, 6:その他 */
  reason: Scalars['Int']['input'];
};

/** Autogenerated return type of CreateCommentReportMutation. */
export type CreateCommentReportMutationPayload = {
  __typename?: 'CreateCommentReportMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of CreateRecommendedPlaylistsMutation */
export type CreateRecommendedPlaylistsMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of CreateRecommendedPlaylistsMutation. */
export type CreateRecommendedPlaylistsMutationPayload = {
  __typename?: 'CreateRecommendedPlaylistsMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  playlists: Array<Playlist>;
};

/** Autogenerated input type of CreateReplyReportMutation */
export type CreateReplyReportMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  reason: Scalars['Int']['input'];
  replyId: Scalars['ID']['input'];
};

/** Autogenerated return type of CreateReplyReportMutation. */
export type CreateReplyReportMutationPayload = {
  __typename?: 'CreateReplyReportMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

export type Creator = {
  __typename?: 'Creator';
  avatar?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
};

export type Duration = {
  __typename?: 'Duration';
  minuteUnitName: Scalars['String']['output'];
  minutes: Scalars['Int']['output'];
  secondUnitName: Scalars['String']['output'];
  seconds: Scalars['Int']['output'];
};

/** Autogenerated input type of ExchangeSamansaTokenTicketMutation */
export type ExchangeSamansaTokenTicketMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  samansaTokenTicket: Scalars['String']['input'];
};

/** Autogenerated return type of ExchangeSamansaTokenTicketMutation. */
export type ExchangeSamansaTokenTicketMutationPayload = {
  __typename?: 'ExchangeSamansaTokenTicketMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  samansaToken: Scalars['String']['output'];
};

export enum FirebaseDeviceRegistrationTokenDeviceType {
  Android = 'ANDROID',
  Ios = 'IOS',
  Other = 'OTHER'
}

/** Autogenerated input type of HideScreenPopupMutation */
export type HideScreenPopupMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  screenPopupId: Scalars['ID']['input'];
};

/** Autogenerated return type of HideScreenPopupMutation. */
export type HideScreenPopupMutationPayload = {
  __typename?: 'HideScreenPopupMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  userHiddenScreenPopup?: Maybe<UserHiddenScreenPopup>;
};

export type HomeScreen = {
  __typename?: 'HomeScreen';
  category?: Maybe<Category>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  videos?: Maybe<Array<OriginalVideo>>;
};

export type KeyVisual = {
  __typename?: 'KeyVisual';
  country?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  video?: Maybe<OriginalVideo>;
};

export type Like = {
  __typename?: 'Like';
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  user?: Maybe<User>;
  video?: Maybe<AnyVideo>;
};

/** The connection type for Like. */
export type LikeConnection = {
  __typename?: 'LikeConnection';
  /** A list of edges. */
  edges?: Maybe<Array<LikeEdge>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Like>>;
  /** Information to aid in pagination. */
  pageInfo?: Maybe<PageInfo>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type LikeEdge = {
  __typename?: 'LikeEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Like>;
};

/** Autogenerated input type of MarkNotificationsAsReadMutation */
export type MarkNotificationsAsReadMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  ids: Array<Scalars['ID']['input']>;
};

/** Autogenerated return type of MarkNotificationsAsReadMutation. */
export type MarkNotificationsAsReadMutationPayload = {
  __typename?: 'MarkNotificationsAsReadMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  notifications: Array<Notification>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addComment?: Maybe<AddCommentMutationPayload>;
  addCommentLike?: Maybe<AddCommentLikeMutationPayload>;
  addLike?: Maybe<AddLikeMutationPayload>;
  addPlaylistsVideo?: Maybe<AddPlaylistsVideoMutationPayload>;
  addReply?: Maybe<AddReplyMutationPayload>;
  addReplyLike?: Maybe<AddReplyLikeMutationPayload>;
  addSamansaTokenTicket?: Maybe<AddSamansaTokenTicketMutationPayload>;
  authorizeSamansaTokenTicket?: Maybe<AuthorizeSamansaTokenTicketMutationPayload>;
  createCommentReport?: Maybe<CreateCommentReportMutationPayload>;
  createRecommendedPlaylists?: Maybe<CreateRecommendedPlaylistsMutationPayload>;
  createReplyReport?: Maybe<CreateReplyReportMutationPayload>;
  exchangeSamansaTokenTicket?: Maybe<ExchangeSamansaTokenTicketMutationPayload>;
  hideScreenPopup?: Maybe<HideScreenPopupMutationPayload>;
  markNotificationsAsRead?: Maybe<MarkNotificationsAsReadMutationPayload>;
  removeComment?: Maybe<RemoveCommentMutationPayload>;
  removeCommentLike?: Maybe<RemoveCommentLikeMutationPayload>;
  removeLike?: Maybe<RemoveLikeMutationPayload>;
  removePlaylistsVideo?: Maybe<RemovePlaylistsVideoMutationPayload>;
  removeReply?: Maybe<RemoveReplyMutationPayload>;
  removeReplyLike?: Maybe<RemoveReplyLikeMutationPayload>;
  /** 視聴履歴を削除します */
  removeViewingTime?: Maybe<RemoveViewingTimeMutationPayload>;
  updateComment?: Maybe<UpdateCommentMutationPayload>;
  updateFirebaseDeviceRegistrationToken?: Maybe<UpdateFirebaseDeviceRegistrationTokenMutationPayload>;
  updateUserViewedTrailer?: Maybe<UpdateUserViewedTrailerMutationPayload>;
  updateViwewingTime?: Maybe<UpdateViewingTimeMutationPayload>;
};


export type MutationAddCommentArgs = {
  input: AddCommentMutationInput;
};


export type MutationAddCommentLikeArgs = {
  input: AddCommentLikeMutationInput;
};


export type MutationAddLikeArgs = {
  input: AddLikeMutationInput;
};


export type MutationAddPlaylistsVideoArgs = {
  input: AddPlaylistsVideoMutationInput;
};


export type MutationAddReplyArgs = {
  input: AddReplyMutationInput;
};


export type MutationAddReplyLikeArgs = {
  input: AddReplyLikeMutationInput;
};


export type MutationAddSamansaTokenTicketArgs = {
  input: AddSamansaTokenTicketMutationInput;
};


export type MutationAuthorizeSamansaTokenTicketArgs = {
  input: AuthorizeSamansaTokenTicketMutationInput;
};


export type MutationCreateCommentReportArgs = {
  input: CreateCommentReportMutationInput;
};


export type MutationCreateRecommendedPlaylistsArgs = {
  input: CreateRecommendedPlaylistsMutationInput;
};


export type MutationCreateReplyReportArgs = {
  input: CreateReplyReportMutationInput;
};


export type MutationExchangeSamansaTokenTicketArgs = {
  input: ExchangeSamansaTokenTicketMutationInput;
};


export type MutationHideScreenPopupArgs = {
  input: HideScreenPopupMutationInput;
};


export type MutationMarkNotificationsAsReadArgs = {
  input: MarkNotificationsAsReadMutationInput;
};


export type MutationRemoveCommentArgs = {
  input: RemoveCommentMutationInput;
};


export type MutationRemoveCommentLikeArgs = {
  input: RemoveCommentLikeMutationInput;
};


export type MutationRemoveLikeArgs = {
  input: RemoveLikeMutationInput;
};


export type MutationRemovePlaylistsVideoArgs = {
  input: RemovePlaylistsVideoMutationInput;
};


export type MutationRemoveReplyArgs = {
  input: RemoveReplyMutationInput;
};


export type MutationRemoveReplyLikeArgs = {
  input: RemoveReplyLikeMutationInput;
};


export type MutationRemoveViewingTimeArgs = {
  input: RemoveViewingTimeMutationInput;
};


export type MutationUpdateCommentArgs = {
  input: UpdateCommentMutationInput;
};


export type MutationUpdateFirebaseDeviceRegistrationTokenArgs = {
  input: UpdateFirebaseDeviceRegistrationTokenMutationInput;
};


export type MutationUpdateUserViewedTrailerArgs = {
  input: UpdateUserViewedTrailerMutationInput;
};


export type MutationUpdateViwewingTimeArgs = {
  input: UpdateViewingTimeMutationInput;
};

export type Notification = {
  __typename?: 'Notification';
  createdAt: Scalars['ISO8601DateTime']['output'];
  id: Scalars['ID']['output'];
  message?: Maybe<Scalars['String']['output']>;
  notificationType: NotificationType;
  title?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
};

export enum NotificationFilter {
  All = 'ALL',
  Read = 'READ',
  Unread = 'UNREAD'
}

export enum NotificationType {
  Announcement = 'ANNOUNCEMENT',
  CommentRecieved = 'COMMENT_RECIEVED',
  NewEvent = 'NEW_EVENT',
  NewFollower = 'NEW_FOLLOWER',
  ReviewLiked = 'REVIEW_LIKED'
}

export type OriginalVideo = Video & {
  __typename?: 'OriginalVideo';
  categories?: Maybe<Array<Category>>;
  comment?: Maybe<Comment>;
  commentaryUrl?: Maybe<Scalars['String']['output']>;
  comments?: Maybe<CommentConnection>;
  commentsCount: Scalars['Int']['output'];
  contentEnd?: Maybe<Duration>;
  cookies?: Maybe<Cookies>;
  createdAt: Scalars['ISO8601DateTime']['output'];
  creator?: Maybe<Creator>;
  currentUserHasLike?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  drmDashFileUrl?: Maybe<Scalars['String']['output']>;
  drmHlsFileUrl?: Maybe<Scalars['String']['output']>;
  duration: Duration;
  fileUrl?: Maybe<Scalars['String']['output']>;
  filmarksUrl?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  landscapeThumbnail?: Maybe<Scalars['String']['output']>;
  likeNum: Scalars['Int']['output'];
  nextVideo?: Maybe<OriginalVideo>;
  playlists?: Maybe<Array<Playlist>>;
  playlistsVideos?: Maybe<Array<PlaylistsVideo>>;
  portraitThumbnail?: Maybe<Scalars['String']['output']>;
  recommends?: Maybe<Array<OriginalVideo>>;
  status: VideoStatusEnum;
  subtitles?: Maybe<Array<SrtSubtitle>>;
  thumbnailCategory?: Maybe<Category>;
  title?: Maybe<Scalars['String']['output']>;
  trailer?: Maybe<TrailerVideo>;
  updatedAt: Scalars['ISO8601DateTime']['output'];
  viewingTime?: Maybe<VideoViewingTime>;
  vtts?: Maybe<Array<VttSubtitle>>;
  willBePublishedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
};


export type OriginalVideoCommentArgs = {
  id: Scalars['ID']['input'];
};


export type OriginalVideoCommentsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

/** The connection type for OriginalVideo. */
export type OriginalVideoConnection = {
  __typename?: 'OriginalVideoConnection';
  /** A list of edges. */
  edges?: Maybe<Array<OriginalVideoEdge>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<OriginalVideo>>;
  /** Information to aid in pagination. */
  pageInfo?: Maybe<PageInfo>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type OriginalVideoEdge = {
  __typename?: 'OriginalVideoEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<OriginalVideo>;
};

/** Information about pagination in a connection. */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['String']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['String']['output']>;
};

export type Payment = {
  __typename?: 'Payment';
  maskedCardNumber?: Maybe<Scalars['String']['output']>;
  nextPaymentDate?: Maybe<Scalars['ISO8601Date']['output']>;
  paymentType: PaymentTypeEnum;
};

export enum PaymentTypeEnum {
  Android = 'android',
  Ios = 'ios',
  NoSubscription = 'no_subscription',
  Stripe = 'stripe'
}

export type Playlist = {
  __typename?: 'Playlist';
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  rowOrder?: Maybe<Scalars['Int']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  userId: Scalars['Int']['output'];
  videos?: Maybe<AnyVideoConnection>;
};


export type PlaylistVideosArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

export type PlaylistsVideo = {
  __typename?: 'PlaylistsVideo';
  id: Scalars['ID']['output'];
  playlist: Playlist;
};

export type PromotionCode = {
  __typename?: 'PromotionCode';
  code: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  redeemBy?: Maybe<Scalars['ISO8601Date']['output']>;
  redeemFrom?: Maybe<Scalars['ISO8601Date']['output']>;
  unavailableReason?: Maybe<Scalars['String']['output']>;
};

export type Query = {
  __typename?: 'Query';
  category: Category;
  commentReplies: CommentRepliesConnection;
  currentUser?: Maybe<User>;
  homeScreens: Array<HomeScreen>;
  keyVisuals: Array<KeyVisual>;
  notifications?: Maybe<Array<Notification>>;
  originalVideo?: Maybe<OriginalVideo>;
  payment: Payment;
  playlists: Array<Playlist>;
  promotionCode?: Maybe<PromotionCode>;
  rootCategories: Array<RootCategory>;
  screenPopups: ScreenPopupConnection;
  shopCampaign?: Maybe<ShopCampaign>;
  trailerVideo?: Maybe<TrailerVideo>;
  trailerVideos: TrailerVideoConnection;
  tvSearchCategories: Array<TvSearchCategory>;
  videoComments: VideoCommentsConnection;
  videoRecommends?: Maybe<VideoRecommendsConnection>;
};


export type QueryCategoryArgs = {
  id: Scalars['ID']['input'];
};


export type QueryCommentRepliesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  id: Scalars['ID']['input'];
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryHomeScreensArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type QueryNotificationsArgs = {
  notificationFilter?: InputMaybe<NotificationFilter>;
};


export type QueryOriginalVideoArgs = {
  id: Scalars['ID']['input'];
};


export type QueryPromotionCodeArgs = {
  code: Scalars['String']['input'];
};


export type QueryScreenPopupsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  displayMethod?: InputMaybe<ScreenPopupDisplayMethod>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryShopCampaignArgs = {
  code: Scalars['String']['input'];
};


export type QueryTrailerVideoArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTrailerVideosArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  keywords?: InputMaybe<Array<Scalars['String']['input']>>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryVideoCommentsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  id: Scalars['ID']['input'];
  last?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<CommentSortEnum>;
};


export type QueryVideoRecommendsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  id: Scalars['ID']['input'];
  last?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated input type of RemoveCommentLikeMutation */
export type RemoveCommentLikeMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  commentId: Scalars['ID']['input'];
};

/** Autogenerated return type of RemoveCommentLikeMutation. */
export type RemoveCommentLikeMutationPayload = {
  __typename?: 'RemoveCommentLikeMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  comment?: Maybe<Comment>;
  errors: Array<Scalars['String']['output']>;
};

/** Autogenerated input type of RemoveCommentMutation */
export type RemoveCommentMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of RemoveCommentMutation. */
export type RemoveCommentMutationPayload = {
  __typename?: 'RemoveCommentMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  comment?: Maybe<Comment>;
  errors: Array<Scalars['String']['output']>;
};

/** Autogenerated input type of RemoveLikeMutation */
export type RemoveLikeMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  videoId: Scalars['ID']['input'];
};

/** Autogenerated return type of RemoveLikeMutation. */
export type RemoveLikeMutationPayload = {
  __typename?: 'RemoveLikeMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  like?: Maybe<Like>;
};

/** Autogenerated input type of RemovePlaylistsVideoMutation */
export type RemovePlaylistsVideoMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  playlistId: Scalars['ID']['input'];
  videoId: Scalars['ID']['input'];
};

/** Autogenerated return type of RemovePlaylistsVideoMutation. */
export type RemovePlaylistsVideoMutationPayload = {
  __typename?: 'RemovePlaylistsVideoMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  playlistsVideo?: Maybe<PlaylistsVideo>;
};

/** Autogenerated input type of RemoveReplyLikeMutation */
export type RemoveReplyLikeMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  replyId: Scalars['ID']['input'];
};

/** Autogenerated return type of RemoveReplyLikeMutation. */
export type RemoveReplyLikeMutationPayload = {
  __typename?: 'RemoveReplyLikeMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  reply?: Maybe<Reply>;
};

/** Autogenerated input type of RemoveReplyMutation */
export type RemoveReplyMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of RemoveReplyMutation. */
export type RemoveReplyMutationPayload = {
  __typename?: 'RemoveReplyMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  reply?: Maybe<Reply>;
};

/** Autogenerated input type of RemoveViewingTimeMutation */
export type RemoveViewingTimeMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** 削除する視聴履歴のID */
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of RemoveViewingTimeMutation. */
export type RemoveViewingTimeMutationPayload = {
  __typename?: 'RemoveViewingTimeMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  viewingTime?: Maybe<VideoViewingTime>;
};

export type Reply = {
  __typename?: 'Reply';
  commentId: Scalars['Int']['output'];
  contents?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  currentUserHasLike?: Maybe<Scalars['Boolean']['output']>;
  discardedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  isMine?: Maybe<Scalars['Boolean']['output']>;
  likeNum?: Maybe<Scalars['Int']['output']>;
  replyOfReplyId?: Maybe<Scalars['Int']['output']>;
  replyToUser?: Maybe<User>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  user?: Maybe<User>;
  userId: Scalars['Int']['output'];
};

/** The connection type for Reply. */
export type ReplyConnection = {
  __typename?: 'ReplyConnection';
  /** A list of edges. */
  edges?: Maybe<Array<ReplyEdge>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Reply>>;
  /** Information to aid in pagination. */
  pageInfo?: Maybe<PageInfo>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type ReplyEdge = {
  __typename?: 'ReplyEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Reply>;
};

export type RootCategory = {
  __typename?: 'RootCategory';
  categories?: Maybe<Array<Category>>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
};

export type ScreenPopup = {
  __typename?: 'ScreenPopup';
  button?: Maybe<ScreenPopupButton>;
  createdAt: Scalars['ISO8601DateTime']['output'];
  displayMethod: ScreenPopupDisplayMethod;
  id: Scalars['ID']['output'];
  image: Scalars['String']['output'];
  pcImage?: Maybe<Scalars['String']['output']>;
  publicationFrom: Scalars['ISO8601DateTime']['output'];
  publicationTo: Scalars['ISO8601DateTime']['output'];
  rowOrderRank: Scalars['Int']['output'];
  title: Scalars['String']['output'];
  updatedAt: Scalars['ISO8601DateTime']['output'];
};

export type ScreenPopupButton = {
  __typename?: 'ScreenPopupButton';
  color: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  screenPopupId: Scalars['Int']['output'];
  text?: Maybe<Scalars['String']['output']>;
  textColor: Scalars['String']['output'];
  url?: Maybe<Scalars['Url']['output']>;
  video?: Maybe<OriginalVideo>;
};

/** The connection type for ScreenPopup. */
export type ScreenPopupConnection = {
  __typename?: 'ScreenPopupConnection';
  /** A list of edges. */
  edges?: Maybe<Array<ScreenPopupEdge>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<ScreenPopup>>;
  /** Information to aid in pagination. */
  pageInfo?: Maybe<PageInfo>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export enum ScreenPopupDisplayMethod {
  KeyVisual = 'KEY_VISUAL',
  Popup = 'POPUP'
}

/** An edge in a connection. */
export type ScreenPopupEdge = {
  __typename?: 'ScreenPopupEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<ScreenPopup>;
};

export type ShopCampaign = {
  __typename?: 'ShopCampaign';
  code: Scalars['String']['output'];
  createdAt: Scalars['ISO8601DateTime']['output'];
  endAt: Scalars['ISO8601Date']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  startAt: Scalars['ISO8601Date']['output'];
  unavailableReason?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['ISO8601DateTime']['output'];
};

export type SrtSubtitle = {
  __typename?: 'SrtSubtitle';
  default: Scalars['Boolean']['output'];
  label: Scalars['String']['output'];
  locale: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type TrailerVideo = Video & {
  __typename?: 'TrailerVideo';
  categories?: Maybe<Array<Category>>;
  comment?: Maybe<Comment>;
  commentaryUrl?: Maybe<Scalars['String']['output']>;
  comments?: Maybe<CommentConnection>;
  commentsCount: Scalars['Int']['output'];
  cookies?: Maybe<Cookies>;
  createdAt: Scalars['ISO8601DateTime']['output'];
  creator?: Maybe<Creator>;
  currentUserHasLike?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  drmDashFileUrl?: Maybe<Scalars['String']['output']>;
  drmHlsFileUrl?: Maybe<Scalars['String']['output']>;
  duration: Duration;
  fileUrl?: Maybe<Scalars['String']['output']>;
  filmarksUrl?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  landscapeThumbnail?: Maybe<Scalars['String']['output']>;
  likeNum: Scalars['Int']['output'];
  nextVideo?: Maybe<OriginalVideo>;
  original?: Maybe<OriginalVideo>;
  playlists?: Maybe<Array<Playlist>>;
  portraitThumbnail?: Maybe<Scalars['String']['output']>;
  status: VideoStatusEnum;
  subtitles?: Maybe<Array<SrtSubtitle>>;
  thumbnailCategory?: Maybe<Category>;
  title?: Maybe<Scalars['String']['output']>;
  trailerPriority?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['ISO8601DateTime']['output'];
  viewingTime?: Maybe<VideoViewingTime>;
  vtts?: Maybe<Array<VttSubtitle>>;
  willBePublishedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
};


export type TrailerVideoCommentArgs = {
  id: Scalars['ID']['input'];
};


export type TrailerVideoCommentsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

/** The connection type for TrailerVideo. */
export type TrailerVideoConnection = {
  __typename?: 'TrailerVideoConnection';
  /** A list of edges. */
  edges?: Maybe<Array<TrailerVideoEdge>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<TrailerVideo>>;
  /** Information to aid in pagination. */
  pageInfo?: Maybe<PageInfo>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type TrailerVideoEdge = {
  __typename?: 'TrailerVideoEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<TrailerVideo>;
};

export type TvSearchCategory = {
  __typename?: 'TvSearchCategory';
  category?: Maybe<Category>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
};

/** Autogenerated input type of UpdateCommentMutation */
export type UpdateCommentMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  contents: Scalars['String']['input'];
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of UpdateCommentMutation. */
export type UpdateCommentMutationPayload = {
  __typename?: 'UpdateCommentMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  comment?: Maybe<Comment>;
  errors: Array<Scalars['String']['output']>;
};

/** Autogenerated input type of UpdateFirebaseDeviceRegistrationTokenMutation */
export type UpdateFirebaseDeviceRegistrationTokenMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deviceType: FirebaseDeviceRegistrationTokenDeviceType;
  firebaseDeviceRegistrationToken: Scalars['String']['input'];
};

/** Autogenerated return type of UpdateFirebaseDeviceRegistrationTokenMutation. */
export type UpdateFirebaseDeviceRegistrationTokenMutationPayload = {
  __typename?: 'UpdateFirebaseDeviceRegistrationTokenMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
};

/** Autogenerated input type of UpdateUserViewedTrailerMutation */
export type UpdateUserViewedTrailerMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  trailerVideoId: Scalars['ID']['input'];
};

/** Autogenerated return type of UpdateUserViewedTrailerMutation. */
export type UpdateUserViewedTrailerMutationPayload = {
  __typename?: 'UpdateUserViewedTrailerMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
};

/** Autogenerated input type of UpdateViewingTimeMutation */
export type UpdateViewingTimeMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  videoId: Scalars['ID']['input'];
  viewingMin: Scalars['Int']['input'];
  viewingSecond: Scalars['Int']['input'];
};

/** Autogenerated return type of UpdateViewingTimeMutation. */
export type UpdateViewingTimeMutationPayload = {
  __typename?: 'UpdateViewingTimeMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  viewingTime?: Maybe<VideoViewingTime>;
};

export type User = {
  __typename?: 'User';
  avatar?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  dateOfBirth?: Maybe<Scalars['ISO8601Date']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  freeTrialEndDate?: Maybe<Scalars['ISO8601Date']['output']>;
  gender?: Maybe<Scalars['String']['output']>;
  hasSubscription?: Maybe<Scalars['Boolean']['output']>;
  histories?: Maybe<OriginalVideoConnection>;
  id: Scalars['ID']['output'];
  isSelf?: Maybe<Scalars['Boolean']['output']>;
  likes?: Maybe<LikeConnection>;
  mailDesired?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  userStatus?: Maybe<Scalars['String']['output']>;
};


export type UserHistoriesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type UserLikesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

export type UserHiddenScreenPopup = {
  __typename?: 'UserHiddenScreenPopup';
  createdAt: Scalars['ISO8601DateTime']['output'];
  id: Scalars['ID']['output'];
  screenPopup: ScreenPopup;
  updatedAt: Scalars['ISO8601DateTime']['output'];
  user: User;
};

export type Video = {
  categories?: Maybe<Array<Category>>;
  comment?: Maybe<Comment>;
  commentaryUrl?: Maybe<Scalars['String']['output']>;
  comments?: Maybe<CommentConnection>;
  commentsCount: Scalars['Int']['output'];
  createdAt: Scalars['ISO8601DateTime']['output'];
  creator?: Maybe<Creator>;
  currentUserHasLike?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  drmDashFileUrl?: Maybe<Scalars['String']['output']>;
  drmHlsFileUrl?: Maybe<Scalars['String']['output']>;
  duration: Duration;
  fileUrl?: Maybe<Scalars['String']['output']>;
  filmarksUrl?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  landscapeThumbnail?: Maybe<Scalars['String']['output']>;
  likeNum: Scalars['Int']['output'];
  nextVideo?: Maybe<OriginalVideo>;
  playlists?: Maybe<Array<Playlist>>;
  portraitThumbnail?: Maybe<Scalars['String']['output']>;
  status: VideoStatusEnum;
  subtitles?: Maybe<Array<SrtSubtitle>>;
  thumbnailCategory?: Maybe<Category>;
  title?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['ISO8601DateTime']['output'];
  viewingTime?: Maybe<VideoViewingTime>;
  vtts?: Maybe<Array<VttSubtitle>>;
  willBePublishedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
};


export type VideoCommentArgs = {
  id: Scalars['ID']['input'];
};


export type VideoCommentsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

/** The connection type for Comment. */
export type VideoCommentsConnection = {
  __typename?: 'VideoCommentsConnection';
  allCount?: Maybe<Scalars['Int']['output']>;
  /** A list of edges. */
  edges?: Maybe<Array<VideoCommentsEdge>>;
  id: Scalars['ID']['output'];
  /** A list of nodes. */
  nodes?: Maybe<Array<Comment>>;
  /** Information to aid in pagination. */
  pageInfo?: Maybe<PageInfo>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type VideoCommentsEdge = {
  __typename?: 'VideoCommentsEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Comment>;
};

/** The connection type for OriginalVideo. */
export type VideoRecommendsConnection = {
  __typename?: 'VideoRecommendsConnection';
  /** A list of edges. */
  edges?: Maybe<Array<VideoRecommendsEdge>>;
  id: Scalars['ID']['output'];
  /** A list of nodes. */
  nodes?: Maybe<Array<OriginalVideo>>;
  /** Information to aid in pagination. */
  pageInfo?: Maybe<PageInfo>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type VideoRecommendsEdge = {
  __typename?: 'VideoRecommendsEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<OriginalVideo>;
};

export enum VideoStatusEnum {
  Published = 'published',
  Unpublished = 'unpublished',
  Upcoming = 'upcoming'
}

export type VideoViewingTime = {
  __typename?: 'VideoViewingTime';
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  discardedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  isViewed?: Maybe<Scalars['Boolean']['output']>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  viewingMin?: Maybe<Scalars['Int']['output']>;
  viewingSecond?: Maybe<Scalars['Int']['output']>;
};

export type VttSubtitle = {
  __typename?: 'VttSubtitle';
  default: Scalars['Boolean']['output'];
  label: Scalars['String']['output'];
  locale: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type GetCategoryQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GetCategoryQuery = { __typename?: 'Query', category: { __typename?: 'Category', id: string, name?: string | null, videos?: Array<{ __typename?: 'OriginalVideo', id: string, title?: string | null, landscapeThumbnail?: string | null, duration: { __typename?: 'Duration', minutes: number, seconds: number } }> | null } };

export type GetHomeScreensQueryVariables = Exact<{ [key: string]: never; }>;


export type GetHomeScreensQuery = { __typename?: 'Query', homeScreens: Array<{ __typename?: 'HomeScreen', id: string, category?: { __typename?: 'Category', id: string, name?: string | null } | null, videos?: Array<{ __typename?: 'OriginalVideo', id: string, title?: string | null, landscapeThumbnail?: string | null, duration: { __typename?: 'Duration', minutes: number, seconds: number } }> | null }> };

export type GetOriginalVideoQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GetOriginalVideoQuery = { __typename?: 'Query', originalVideo?: { __typename?: 'OriginalVideo', title?: string | null, description?: string | null, landscapeThumbnail?: string | null, likeNum: number, duration: { __typename?: 'Duration', minutes: number, seconds: number } } | null };

export type GetVideoCommentsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
}>;


export type GetVideoCommentsQuery = { __typename?: 'Query', videoComments: { __typename?: 'VideoCommentsConnection', id: string, allCount?: number | null, pageInfo?: { __typename?: 'PageInfo', startCursor?: string | null, endCursor?: string | null, hasNextPage: boolean, hasPreviousPage: boolean } | null, edges?: Array<{ __typename?: 'VideoCommentsEdge', cursor: string, node?: { __typename?: 'Comment', id: string, contents?: string | null, createdAt?: any | null, likeNum?: number | null, user?: { __typename?: 'User', id: string, name?: string | null, avatar?: string | null } | null } | null }> | null } };


export const GetCategoryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getCategory"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"category"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"videos"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"duration"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"minutes"}},{"kind":"Field","name":{"kind":"Name","value":"seconds"}}]}},{"kind":"Field","name":{"kind":"Name","value":"landscapeThumbnail"}}]}}]}}]}}]} as unknown as DocumentNode<GetCategoryQuery, GetCategoryQueryVariables>;
export const GetHomeScreensDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getHomeScreens"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"homeScreens"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"videos"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"duration"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"minutes"}},{"kind":"Field","name":{"kind":"Name","value":"seconds"}}]}},{"kind":"Field","name":{"kind":"Name","value":"landscapeThumbnail"}}]}}]}}]}}]} as unknown as DocumentNode<GetHomeScreensQuery, GetHomeScreensQueryVariables>;
export const GetOriginalVideoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getOriginalVideo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"originalVideo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"landscapeThumbnail"}},{"kind":"Field","name":{"kind":"Name","value":"likeNum"}},{"kind":"Field","name":{"kind":"Name","value":"duration"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"minutes"}},{"kind":"Field","name":{"kind":"Name","value":"seconds"}}]}}]}}]}}]} as unknown as DocumentNode<GetOriginalVideoQuery, GetOriginalVideoQueryVariables>;
export const GetVideoCommentsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getVideoComments"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"after"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"videoComments"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"after"},"value":{"kind":"Variable","name":{"kind":"Name","value":"after"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"allCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"contents"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"avatar"}}]}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"likeNum"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetVideoCommentsQuery, GetVideoCommentsQueryVariables>;